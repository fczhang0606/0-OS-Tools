################################################################################################################################
\Ubuntu

    https://ubuntu.com/
        ubuntu-18.04.6-desktop-amd64.iso
        ubuntu-20.04.6-desktop-amd64.iso
        2204

    启动盘(OS + rufus + U盘) + 承载盘
        http://rufus.ie/en/        http://rufus.ie/zh/

    磁盘分区
        https://blog.csdn.net/baidu_36602427/article/details/86548203

    安装系统（默认选项，含有驱动）
################################################################################################################################
\Kernel                                                        https://blog.csdn.net/qq_43472789/article/details/131082902

uname -r

https://kernel.ubuntu.com/~kernel-ppa/mainline
sudo dpkg -i *.deb
sudo update-grub

dpkg --get-selections | grep linux
sudo apt-get remove --purge *
################################################################################################################################
\Driver

sudo apt install flex bison
sudo apt install cmake
sudo apt install git

git clone https://github.com/intel/backport-iwlwifi.git
cd backport-iwlwifi
cd iwlwifi-stack-dev
sudo make defconfig-iwlwifi-public
sudo make
sudo make install

git clone git://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git
cd linux-firmware/
sudo cp iwlwifi-* /lib/firmware
################################################################################################################################
\OS Update

    sudo passwd root
    su <passwd>

    (Source) of apt-get install

    sudo apt update
    sudo apt upgrade

    ls /*

    ######
    sudo add-apt-repository multiverse
    sudo apt install ubuntu-restricted-extras
    sudo apt install synaptic

    sudo apt install terminator

    ######
    sudo apt install ibus-libpinyin
    ibus-setup
    reboot
################################################################################################################################
\Python

    sudo apt install python-pip
    sudo apt install python-dev
    sudo apt install python3-pip
    sudo apt install python3-dev

    //whereis python
    //python + python2 + python3
    //pip(1\2\3)

    sudo mkdir .pip
    cd .pip/
    sudo touch pip.conf
    sudo gedit pip.conf
[global]
index-url = https://pypi.tuna.tsinghua.edu.cn/simple
[install]
use-mirrors = true
mirrors = https://pypi.tuna.tsinghua.edu.cn/simple
trusted-host = pypi.tuna.tsinghua.edu.cn
################################################################################################################################
\GPU

    https://www.cnblogs.com/hmlovetech/p/14346202.html
    Nvidia GPU Driver
        lsmod | grep nouveau
        lspci | grep -i nvidia
            :Device 2684
        nvidia-smi
            :Driver Version
            :CUDA Version

    https://blog.csdn.net/qq_43673118/article/details/117966752
    https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html
    https://developer.nvidia.com/cuda-toolkit-archive
    cuda toolkit
        https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda_11.1.1_455.32.00_linux.run
        https://developer.download.nvidia.com/compute/cuda/11.3.1/local_installers/cuda_11.3.1_465.19.01_linux.run
        https://developer.download.nvidia.com/compute/cuda/11.7.1/local_installers/cuda_11.7.1_515.65.01_linux.run
            sudo sh cuda_11.1.1_455.32.00_linux.run
            sudo sh cuda_11.3.1_465.19.01_linux.run
            sudo sh cuda_11.7.1_515.65.01_linux.run
            sudo gedit ~/.bashrc
                # export PATH=$PATH:/usr/local/cuda-11.1/bin
                # export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.1/lib64
                # export PATH=$PATH:/usr/local/cuda-11.3/bin
                # export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.3/lib64
                # export PATH=$PATH:/usr/local/cuda-11.7/bin
                # export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.7/lib64
                export PATH=$PATH:/usr/local/cuda/bin
                export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64
                export CUDA_HOME=/usr/local/cuda
            source ~/.bashrc
        nvcc -V
            :cuda_11.1.TC455_06.29190527_0
            :cuda_11.3.r11.3/compiler.29920130_0
            :cuda_11.7.r11.7/compiler.31442593_0
        https://blog.csdn.net/weixin_42416791/article/details/115720595

        cd /usr/local/cuda/samples/1_Utilities/deviceQuery
        sudo make
        ./deviceQuery

        //cudnn
        https://blog.csdn.net/takedachia/article/details/130375718
        https://developer.nvidia.com/rdp/cudnn-archive
        sudo dpkg -i cudnn-local-repo-ubuntu1804-8.9.0.131_1.0-1_amd64.deb
        sudo cp /var/cudnn-local-repo-ubuntu1804-8.9.0.131/cudnn-local-A18C0B21-keyring.gpg /usr/share/keyrings/
        sudo apt-get update
        apt-cache policy libcudnn8
        sudo apt-get install libcudnn8=8.9.0.131-1+cuda11.8
        sudo apt-get install libcudnn8-dev=8.9.0.131-1+cuda11.8
        sudo apt-get install libcudnn8-samples=8.9.0.131-1+cuda11.8

        cp -r /usr/src/cudnn_samples_v8/ $HOME
        cd $HOME/cudnn_samples_v8/mnistCUDNN
        sudo apt-get install libfreeimage3 libfreeimage-dev
        make clean && make
        ./mnistCUDNN

        sudo rm -rf /usr/local/cuda
        sudo ln -s /usr/local/cuda-11.1 /usr/local/cuda

        //env
        torch                           https://pytorch.org/get-started/previous-versions/
################################################################################################################################

